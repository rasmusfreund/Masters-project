cwd
setwd("C:/Users/rasmu/Desktop/Bioinformatics/MSc/testing")
processing <- function(input, output){
if (FALSE){
input <- "ff3751e9-a2c0-4902-9d8d-43dd5f7b26a6.txt"
output <- "pre_processed_ff3751e9-a2c0-4902-9d8d-43dd5f7b26a6.txt"
}
df     <- readr::read_delim(file = input, delim = " ", skip = 3, col_names = c("mass", "int"))
df     <- dplyr::mutate(df, int = log(int+1))
model  <- stats::loess(int~mass, data=df, span = 0.0008)
df     <- dplyr::mutate(df, int = stats::predict(model, mass))
model  <- stats::loess(int~mass, data=df, span = 0.3)
df     <- dplyr::mutate(df, int =  int / stats::predict(model, df$mass))
df$int <- -1 + 2*(df$int-min(df$int))/(max(df$int)-min(df$int))
# Map to a new fixed scale
model  <- stats::loess(int~mass, data=df, span = 0.0003)
mass   <- seq(2000, 20000, 0.5)
df     <- tibble::tibble(int = stats::predict(model, mass), mass = mass)
readr::write_csv(df, output)
return()
}
processing(arg1, arg2)
args <- commandArgs(trailingOnly = TRUE)
arg1 <- args[1]
arg2 <- args[2]
processing(arg1, arg2)
processing <- function(input, output){
if (TRUE){
input <- "ff3751e9-a2c0-4902-9d8d-43dd5f7b26a6.txt"
output <- "pre_processed_ff3751e9-a2c0-4902-9d8d-43dd5f7b26a6.txt"
}
df     <- readr::read_delim(file = input, delim = " ", skip = 3, col_names = c("mass", "int"))
df     <- dplyr::mutate(df, int = log(int+1))
model  <- stats::loess(int~mass, data=df, span = 0.0008)
df     <- dplyr::mutate(df, int = stats::predict(model, mass))
model  <- stats::loess(int~mass, data=df, span = 0.3)
df     <- dplyr::mutate(df, int =  int / stats::predict(model, df$mass))
df$int <- -1 + 2*(df$int-min(df$int))/(max(df$int)-min(df$int))
# Map to a new fixed scale
model  <- stats::loess(int~mass, data=df, span = 0.0003)
mass   <- seq(2000, 20000, 0.5)
df     <- tibble::tibble(int = stats::predict(model, mass), mass = mass)
readr::write_csv(df, output)
return()
}
processing(arg1, arg2)
processing(arg1, arg2)
processing <- function(input, output){
if (TRUE){
input <- "ff3751e9-a2c0-4902-9d8d-43dd5f7b26a6.txt"
output <- "pre_processed_ff3751e9-a2c0-4902-9d8d-43dd5f7b26a6.txt"
}
df     <- readr::read_delim(file = input, delim = " ", skip = 3, col_names = c("mass", "int"))
df     <- dplyr::mutate(df, int = log(int+1))
model  <- stats::loess(int~mass, data=df, span = 0.0008)
df     <- dplyr::mutate(df, int = stats::predict(model, mass))
model  <- stats::loess(int~mass, data=df, span = 0.3)
df     <- dplyr::mutate(df, int =  int / stats::predict(model, df$mass))
df$int <- -1 + 2*(df$int-min(df$int))/(max(df$int)-min(df$int))
# Map to a new fixed scale
model  <- stats::loess(int~mass, data=df, span = 0.0003)
mass   <- seq(2000, 20000, 0.5)
df     <- tibble::tibble(int = stats::predict(model, mass), mass = mass)
readr::write_csv(df, output)
return()
}
args <- commandArgs(trailingOnly = TRUE)
arg1 <- args[1]
arg2 <- args[2]
# Create the directory if it doesn't exist
if (!file.exists(arg2)) {
dir.create(dirname(arg2), recursive = TRUE)
}
time_taken <- system.time({
processing(arg1, arg2)
})
print(time_taken)
